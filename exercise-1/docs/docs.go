// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/teams": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new team with managers and members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Create a new team",
                "parameters": [
                    {
                        "description": "Team data with managers and members",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateTeamInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created team with roster",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/managers": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a user as a manager to a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Add manager to team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Manager data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddManagerToTeamInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/managers/{managerId}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a manager from a team",
                "tags": [
                    "teams"
                ],
                "summary": "Remove manager from team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Manager ID",
                        "name": "managerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/members": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a user as a member to a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Add member to team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Member data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddMemberToTeamInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/members/{memberId}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a member from a team",
                "tags": [
                    "teams"
                ],
                "summary": "Remove member from team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Member ID",
                        "name": "memberId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AddManagerToTeamInput": {
            "type": "object",
            "required": [
                "teamId",
                "userId"
            ],
            "properties": {
                "teamId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "dto.AddMemberToTeamInput": {
            "type": "object",
            "required": [
                "teamId",
                "userId"
            ],
            "properties": {
                "teamId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "dto.CreateTeamInput": {
            "type": "object",
            "required": [
                "teamName"
            ],
            "properties": {
                "managers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ManagerInput"
                    }
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MemberInput"
                    }
                },
                "teamName": {
                    "type": "string"
                }
            }
        },
        "dto.ManagerInput": {
            "type": "object",
            "required": [
                "managerId",
                "managerName"
            ],
            "properties": {
                "managerId": {
                    "type": "string"
                },
                "managerName": {
                    "type": "string"
                }
            }
        },
        "dto.MemberInput": {
            "type": "object",
            "required": [
                "memberId",
                "memberName"
            ],
            "properties": {
                "memberId": {
                    "type": "string"
                },
                "memberName": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter JWT token like: Bearer \u003cyour-token\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "SETA Training API",
	Description:      "User, Team, and Asset Management",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
