{
    "swagger": "2.0",
    "info": {
        "description": "User, Team, and Asset Management",
        "title": "SETA Training API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/folders": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new folder for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "folders"
                ],
                "summary": "Create a new folder",
                "parameters": [
                    {
                        "description": "Folder data",
                        "name": "folder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FolderDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created folder",
                        "schema": {
                            "$ref": "#/definitions/models.Folder"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/folders/{folderId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a specific folder",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "folders"
                ],
                "summary": "Get folder details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Folder ID",
                        "name": "folderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Folder details",
                        "schema": {
                            "$ref": "#/definitions/models.Folder"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Folder not found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a folder's name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "folders"
                ],
                "summary": "Update folder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Folder ID",
                        "name": "folderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated folder data",
                        "name": "folder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FolderDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated folder",
                        "schema": {
                            "$ref": "#/definitions/models.Folder"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Folder not found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a folder and all its notes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "folders"
                ],
                "summary": "Delete folder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Folder ID",
                        "name": "folderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Folder not found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/folders/{folderId}/share": {
            "post": {
                "description": "Share a folder with another user with read or write access",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "folders"
                ],
                "summary": "Share folder with user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Folder ID",
                        "name": "folderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User ID and permission",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ShareDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/folders/{folderId}/share/{userId}": {
            "delete": {
                "description": "Remove a user's access to a shared folder",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "folders"
                ],
                "summary": "Revoke shared folder access",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Folder ID",
                        "name": "folderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/notes": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new note in a folder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Create a new note",
                "parameters": [
                    {
                        "description": "Note data",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.NoteDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created note",
                        "schema": {
                            "$ref": "#/definitions/models.Note"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/notes/{noteId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Get a note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "noteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Note"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Update a note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "noteId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated note",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.NoteDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Note"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Delete a note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "noteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/notes/{noteId}/share": {
            "post": {
                "description": "Share a single note with read or write access",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Share a note with another user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "noteId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User ID and permission",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ShareDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/notes/{noteId}/share/{userId}": {
            "delete": {
                "description": "Remove a user's access to a shared note",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Revoke note sharing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "noteId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/teams": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new team with managers and members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Create a new team",
                "parameters": [
                    {
                        "description": "Team data with managers and members",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateTeamInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created team with roster",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/assets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Manager-only API: View all assets that team members own or can access (shared folders or notes)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Get all accessible assets of team members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with owned and shared folders",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/managers": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a user as a manager to a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Add manager to team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Manager data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddManagerToTeamInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/managers/{managerId}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a manager from a team",
                "tags": [
                    "teams"
                ],
                "summary": "Remove manager from team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Manager ID",
                        "name": "managerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/members": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a user as a member to a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Add member to team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Member data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddMemberToTeamInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/members/{memberId}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a member from a team",
                "tags": [
                    "teams"
                ],
                "summary": "Remove member from team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Member ID",
                        "name": "memberId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{userId}/assets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all folders owned or shared with a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Get all assets of a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with owned and shared folders",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AddManagerToTeamInput": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "string"
                }
            }
        },
        "dto.AddMemberToTeamInput": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "string"
                }
            }
        },
        "dto.CreateTeamInput": {
            "type": "object",
            "required": [
                "teamName"
            ],
            "properties": {
                "managers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ManagerInput"
                    }
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MemberInput"
                    }
                },
                "teamName": {
                    "type": "string"
                }
            }
        },
        "dto.FolderDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ManagerInput": {
            "type": "object",
            "required": [
                "managerId",
                "managerName"
            ],
            "properties": {
                "managerId": {
                    "type": "string"
                },
                "managerName": {
                    "type": "string"
                }
            }
        },
        "dto.MemberInput": {
            "type": "object",
            "required": [
                "memberId",
                "memberName"
            ],
            "properties": {
                "memberId": {
                    "type": "string"
                },
                "memberName": {
                    "type": "string"
                }
            }
        },
        "dto.NoteDTO": {
            "type": "object",
            "required": [
                "body",
                "folder_id",
                "title"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "folder_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.ShareDTO": {
            "type": "object",
            "required": [
                "accessRole",
                "userId"
            ],
            "properties": {
                "accessRole": {
                    "$ref": "#/definitions/models.AccessRole"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "models.AccessRole": {
            "type": "string",
            "enum": [
                "READ",
                "WRITE"
            ],
            "x-enum-varnames": [
                "AccessLevelRead",
                "AccessLevelWrite"
            ]
        },
        "models.Folder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Note"
                    }
                },
                "owner": {
                    "$ref": "#/definitions/models.User"
                },
                "ownerID": {
                    "type": "string"
                }
            }
        },
        "models.Note": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "folder": {
                    "$ref": "#/definitions/models.Folder"
                },
                "folderID": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/models.User"
                },
                "ownerID": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Roster": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "isLeader": {
                    "type": "boolean"
                },
                "team": {
                    "$ref": "#/definitions/models.Team"
                },
                "teamID": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.Team": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "rosters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Roster"
                    }
                },
                "teamName": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "folders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Folder"
                    }
                },
                "id": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "rosters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Roster"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserRole": {
            "type": "string",
            "enum": [
                "MANAGER",
                "MEMBER"
            ],
            "x-enum-varnames": [
                "RoleManager",
                "RoleMember"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter JWT token like: Bearer \u003cyour-token\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}